#!/usr/bin/env python

import os
import unittest
import io
from sablereader import read_sable

DATA_DIR = os.path.dirname(__file__)

def _open_data_file(fn):
    return open(os.path.join(DATA_DIR, fn))

class TestSableReader(unittest.TestCase):
    def test_read_empty(self):
        f = io.StringIO()
        actual = read_sable(f)
        self.assertEqual(len(list(actual)), 0)

    def test_read_single(self):
        with _open_data_file("test_single.txt") as f:
            actual = list(read_sable(f))
            self.assertEqual(len(actual), 1)
            self.assertEqual(actual[0].header, "sp|Q01113|IL9R_HUMAN Interleukin-9 receptor OS=Homo sapiens OX=9606 GN=IL9R PE=2 SV=3")
            self.assertEqual(actual[0].seq, "MGLGRCIWEGWTLESEALRRDMGTWLLACICICTCVCLGVSVTGEGQGPRSRTFTCLTNNILRIDCHWSAPELGQGSSPWLLFTSNQAPGGTHKCILRGSECTVVLPPEAVLVPSDNFTITFHHCMSGREQVSLVDPEYLPRRHVKLDPPSDLQSNISSGHCILTWSISPALEPMTTLLSYELAFKKQEEAWEQAQHRDHIVGVTWLILEAFELDPGFIHEARLRVQMATLEDDVVEEERYTGQWSEWSQPVCFQAPQRQGPLIPPWGWPGNTLVAVSIFLLLTGPTYLLFKLSPRVKRIFYQNVPSPAMFFQPLYSVHNGNFQTWMGAHGAGVLLSQDCAGTPQGALEPCVQEATALLTCGPARPWKSVALEEEQEGPGTRLPGNLSSEDVLPAGCTEWRVQTLAYLPQEDWAPTSLTRPAPPDSEGSRSSSSSSSSNNNNYCALGCYGGWHLSALPGNTQSSGPIPALACGLSCDHQGLETQQGVAWVLAGHCQRPGLHEDLQGMLLPSVLSKARSWTF")
            self.assertEqual(actual[0].ss, "CCCHHHHCCCCCCCCCCCCCCCCHHHHHHHHHHHHHCCCCCCCCCCCCCCCCCEEEEECCCEEEEEEECCCCCCCCCCCEEEEEECCCCCCCCCCCCCCCCCCCCCCCCCEEEECCCEEEEEEEEEECCCCCCCCCCCECCCEEECCCCCCCEEEECCCCEEEEEECCCCCCCCCCCEEEEEEEEECCCCCCCCCCCCCCCCCCCEEEECCCCCCCCCEEEEEEEECCCCCCCCCCCCCCCCCCCCCCCCCCEEECCCCCCCCCCCCCHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHCCCCCCCCCCCCCCCCCCCCCCHHECCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCEEEEEECCCCCCCCHHHHHHCCCHHHHHHCCCCCC")
            self.assertEqual(actual[0].sa, "44134002213313443343302100000000000001223144556345454030113323202010323553423121101123424554332324434132213341211334211110110131444332233312134203141143031324432010203223322313110201020245554134143253233333110322313431201010102233334322343324120141033121313544432222111000000000000000000000112232023101231231454154123345341431233542212122322323323333325534343443454354435254545334453554443442334224333144344224444235445443456453444453334344432142325233213213432535312344345143534314445300010224143441353143211321134234233")


    def test_read_multiple(self):
        with _open_data_file("test_multiple.txt") as f:
            actual = list(read_sable(f))
            self.assertEqual(len(actual), 3)
            self.assertEqual(actual[0].header, "sp|Q01113|IL9R_HUMAN Interleukin-9 receptor OS=Homo sapiens OX=9606 GN=IL9R PE=2 SV=3")
            self.assertEqual(actual[0].seq, "MGLGRCIWEGWTLESEALRRDMGTWLLACICICTCVCLGVSVTGEGQGPRSRTFTCLTNNILRIDCHWSAPELGQGSSPWLLFTSNQAPGGTHKCILRGSECTVVLPPEAVLVPSDNFTITFHHCMSGREQVSLVDPEYLPRRHVKLDPPSDLQSNISSGHCILTWSISPALEPMTTLLSYELAFKKQEEAWEQAQHRDHIVGVTWLILEAFELDPGFIHEARLRVQMATLEDDVVEEERYTGQWSEWSQPVCFQAPQRQGPLIPPWGWPGNTLVAVSIFLLLTGPTYLLFKLSPRVKRIFYQNVPSPAMFFQPLYSVHNGNFQTWMGAHGAGVLLSQDCAGTPQGALEPCVQEATALLTCGPARPWKSVALEEEQEGPGTRLPGNLSSEDVLPAGCTEWRVQTLAYLPQEDWAPTSLTRPAPPDSEGSRSSSSSSSSNNNNYCALGCYGGWHLSALPGNTQSSGPIPALACGLSCDHQGLETQQGVAWVLAGHCQRPGLHEDLQGMLLPSVLSKARSWTF")
            self.assertEqual(actual[0].ss, "CCCHHHHCCCCCCCCCCCCCCCCHHHHHHHHHHHHHCCCCCCCCCCCCCCCCCEEEEECCCEEEEEEECCCCCCCCCCCEEEEEECCCCCCCCCCCCCCCCCCCCCCCCCEEEECCCEEEEEEEEEECCCCCCCCCCCECCCEEECCCCCCCEEEECCCCEEEEEECCCCCCCCCCCEEEEEEEEECCCCCCCCCCCCCCCCCCCEEEECCCCCCCCCEEEEEEEECCCCCCCCCCCCCCCCCCCCCCCCCCEEECCCCCCCCCCCCCHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHCCCCCCCCCCCCCCCCCCCCCCHHECCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCEEEEEECCCCCCCCHHHHHHCCCHHHHHHCCCCCC")
            self.assertEqual(actual[0].sa, "44134002213313443343302100000000000001223144556345454030113323202010323553423121101123424554332324434132213341211334211110110131444332233312134203141143031324432010203223322313110201020245554134143253233333110322313431201010102233334322343324120141033121313544432222111000000000000000000000112232023101231231454154123345341431233542212122322323323333325534343443454354435254545334453554443442334224333144344224444235445443456453444453334344432142325233213213432535312344345143534314445300010224143441353143211321134234233")

            self.assertEqual(actual[1].header, "1gut")
            self.assertEqual(actual[1].seq, "SISARNQLKGKVVGLKKGVVTAEVVLEIAGGNKITSIISLDSVEELGVKEGAELTAVVKSTDVMILA")
            self.assertEqual(actual[1].ss, "CCCHHHCCCEEEEEEECCCCEEEEEEEECCCCEEEEEECHHHHHHCCCCCCCEEEEEEECCEEEEEC")
            self.assertEqual(actual[1].sa, "0000101020201303533020101010443120001002400330304321200000101101011")

            self.assertEqual(actual[2].header, "1j4v")
            self.assertEqual(actual[2].seq, "LGKFSQTCYNSAIQGSVLTSTCERTNGGYNTSSIDLNSVIENVDGSLKWQPSNFIETCRNTQLAGSSELAAECKTRAQQFVSTKINLDDHIANIDGTLKY")
            self.assertEqual(actual[2].ss, "CCCCHHHCCCEEECCCEEEEEECCCCCCCEEEEEECCCEEECCCCEEEECCCCCCCCCCCEEECCCCEEEEEECCCCCCCCEEEEECCCEEECCCCCEEE")
            self.assertEqual(actual[2].sa, "2230131033031421101020244534223020202200113412031335311420330414433102020344544223020102310202202033")



if __name__ == "__main__":
    unittest.main()
